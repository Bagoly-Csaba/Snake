{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bobafet\\\\Desktop\\\\snake\\\\snake\\\\src\\\\pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component, useRef } from 'react';\nimport createBoardCreator from '../components/createPage/createBoardCreator';\nimport CreatorTile from '../components/createPage/CreatorTile';\nimport CreatorCell from '../components/createPage/CreatorCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create() {\n  _s();\n\n  const nameForm = useRef(null);\n  const [activeCard, setActiveCard] = useState(0);\n  const [grid, setGrid] = useState([]);\n  const [sides, setSides] = useState([2]);\n\n  function freshBoard(row, col) {\n    const newBoard = createBoardCreator(row, col);\n    setGrid(newBoard);\n  }\n\n  const getSides = () => {\n    const form = nameForm.current;\n    alert(`${form['firstname'].value} ${form['lastname'].value}`);\n  };\n\n  const tileClick = (x, y) => {};\n\n  if (activeCard === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"width :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"height :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setActiveCard(1);\n              getSides();\n              freshBoard(4, 5);\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: grid.right.map((singleRow, index1) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [grid.bottom.map((singleBlock, index2) => {\n          return /*#__PURE__*/_jsxDEV(CreatorTile, {\n            details: singleBlock,\n            tileClick: tileClick\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 18\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(CreatorCell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, index1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"TQpVdl+KIhydV1qKUr+xchP1cFY=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Bobafet/Desktop/snake/snake/src/pages/Create.js"],"names":["React","useState","Component","useRef","createBoardCreator","CreatorTile","CreatorCell","Create","nameForm","activeCard","setActiveCard","grid","setGrid","sides","setSides","freshBoard","row","col","newBoard","getSides","form","current","alert","value","tileClick","x","y","right","map","singleRow","index1","display","bottom","singleBlock","index2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAjC;;AAGA,WAASc,UAAT,CAAoBC,GAApB,EAAwBC,GAAxB,EAA4B;AAC1B,UAAMC,QAAQ,GAAGd,kBAAkB,CAACY,GAAD,EAAMC,GAAN,CAAnC;AACAL,IAAAA,OAAO,CAACM,QAAD,CAAP;AACD;;AACD,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,IAAI,GAAGZ,QAAQ,CAACa,OAAtB;AACCC,IAAAA,KAAK,CAAE,GAAEF,IAAI,CAAC,WAAD,CAAJ,CAAkBG,KAAM,IAAGH,IAAI,CAAC,UAAD,CAAJ,CAAiBG,KAAM,EAAtD,CAAL;AACF,GAHD;;AAIA,QAAMC,SAAS,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAQ,CAEzB,CAFD;;AAGA,MAAGjB,UAAU,KAAK,CAAlB,EAAoB;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEC;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAJD,eAOE;AAAA,iCACA;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAEC,cAAAA,aAAa,CAAC,CAAD,CAAb;AAAiBS,cAAAA,QAAQ;AAAIJ,cAAAA,UAAU,CAAC,CAAD,EAAG,CAAH,CAAV;AAAiB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBC;;AACD,sBACE;AAAA,cAGIJ,IAAI,CAACgB,KAAL,CAAWC,GAAX,CAAe,CAACC,SAAD,EAAWC,MAAX,KAAoB;AACjC,0BAAO;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA,mBACNpB,IAAI,CAACqB,MAAL,CAAYJ,GAAZ,CAAgB,CAACK,WAAD,EAAaC,MAAb,KAAsB;AACvC,8BAAO,QAAC,WAAD;AAAa,YAAA,OAAO,EAAED,WAAtB;AAAmC,YAAA,SAAS,EAAET;AAA9C,aAA8DU,MAA9D;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFE,CADM,eAKX,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBALW;AAAA,SAAoCJ,MAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AAOD,KARD;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAtDQvB,M;;KAAAA,M;AAwDT,eAAeA,MAAf","sourcesContent":["import React, {useState,Component, useRef } from 'react';\nimport createBoardCreator from '../components/createPage/createBoardCreator';\nimport CreatorTile from '../components/createPage/CreatorTile';\nimport CreatorCell from '../components/createPage/CreatorCell';\n\nfunction Create() {\n  const nameForm = useRef(null)\n  const [activeCard, setActiveCard] = useState(0);\n  const [grid,setGrid] = useState([]);\n  const [sides,setSides] = useState([2]);\n  \n\n  function freshBoard(row,col){\n    const newBoard = createBoardCreator(row, col);\n    setGrid(newBoard);\n  }\n  const getSides = () => {\n    const form = nameForm.current\n     alert(`${form['firstname'].value} ${form['lastname'].value}`)\n  }\n  const tileClick = (x,y) =>{\n\n  }\n  if(activeCard === 0){\n  return (\n    <div className='create'>\n      <div className='form'>\n      <label>width :</label>\n       <input type=\"number\" name=\"width\"/>\n       <label>height :</label>\n       <input type=\"number\" name=\"height\"/>\n      \n        \n        <div>\n        <button onClick={() => { setActiveCard(1);getSides(); freshBoard(4,5);} }>Done</button>\n        </div>\n      </div>\n       \n    </div>\n  )\n  }\n  return(\n    <div>\n      {\n        \n        grid.right.map((singleRow,index1)=>{\n          return <div style={{display: \"flex\"}} key={index1}>{\n           grid.bottom.map((singleBlock,index2)=>{\n          return <CreatorTile details={singleBlock} tileClick={tileClick} key={index2}/>\n        })\n      }\n      <CreatorCell/>\n          </div>\n        })\n        \n      }\n    \n    </div>\n  )\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}