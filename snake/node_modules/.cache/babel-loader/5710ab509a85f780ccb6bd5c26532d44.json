{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bobafet\\\\Desktop\\\\snake\\\\snake\\\\src\\\\pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component, useRef, useEffect } from 'react';\nimport createBoardCreator from '../components/createPage/createBoardCreator';\nimport CreatorTile from '../components/createPage/CreatorTile';\nimport CreatorCell from '../components/createPage/CreatorCell';\nimport BodyPartBox from '../components/createPage/BodyPartBox';\nimport CreatorBottomCells from '../components/createPage/CreatorBottomCells';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create() {\n  _s();\n\n  const [activeCard, setActiveCard] = useState(0);\n  const [board, setBoard] = useState([]);\n  const [grid, setGrid] = useState([]);\n  const [width, setWidth] = useState(3);\n  const [height, setHeight] = useState(3);\n  const [bodyPart, setBodyPart] = useState(0);\n  useEffect(() => {\n    function freshBoard(row, col) {\n      const newBoard = createBoardCreator(row, col);\n      setBoard(newBoard);\n      setGrid(newBoard.board);\n    }\n\n    freshBoard(height, width);\n  }, [height]);\n\n  const tileClick = (x, y) => {\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    let newBoard = JSON.parse(JSON.stringify(board));\n    newGrid[x][y].value = bodyPart;\n    newBoard.board = newGrid;\n    setGrid(newGrid);\n    setBoard(newBoard);\n  };\n\n  const tileRightClick = (x, y) => {\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    let newBoard = JSON.parse(JSON.stringify(board));\n    newGrid[x][y].value = 2;\n    newBoard.board = newGrid;\n    setGrid(newGrid);\n    setBoard(newBoard);\n  };\n\n  const CellChange = (x, value) => {\n    let newBoard = JSON.parse(JSON.stringify(board));\n    newBoard.right[x] = 1;\n    setBoard(newBoard);\n  };\n\n  const submitMap = () => {\n    let stones = '2,2';\n    grid.map((singleRow, index1) => {\n      singleRow.map((singleBlock, index2) => {\n        if (singleBlock.value === 2) {\n          stones = stones + index1 + ',' + index2;\n        }\n      });\n    });\n    Axios.post(\"http://localhost:3001/api/insertMap\", {\n      name: 'test',\n      width: width,\n      height: height,\n      parts: '1,1,2,2,3,3',\n      stones: stones,\n      uploaded_by: 'bob'\n    }).then(() => {\n      alert(\"success\");\n    });\n  };\n\n  if (activeCard === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"width :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"width\",\n          onChange: event => setWidth(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"height :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\",\n          onChange: event => setHeight(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setActiveCard(1);\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [grid.map((singleRow, index1) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: singleRow.map((singleBlock, index2) => {\n          return /*#__PURE__*/_jsxDEV(CreatorTile, {\n            details: singleBlock,\n            tileClick: tileClick,\n            tileRightClick: tileRightClick\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this);\n        })\n      }, index1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBodyPart(1),\n        children: \"Head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBodyPart(3),\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBodyPart(4),\n        children: \"Tail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBodyPart(0),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(board);\n      },\n      children: \"save map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitMap,\n      children: \"save map and play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"KPoEdCzoyP8tkrRg4m2O2u7NJ/Q=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Bobafet/Desktop/snake/snake/src/pages/Create.js"],"names":["React","useState","Component","useRef","useEffect","createBoardCreator","CreatorTile","CreatorCell","BodyPartBox","CreatorBottomCells","Axios","Create","activeCard","setActiveCard","board","setBoard","grid","setGrid","width","setWidth","height","setHeight","bodyPart","setBodyPart","freshBoard","row","col","newBoard","tileClick","x","y","newGrid","JSON","parse","stringify","value","tileRightClick","CellChange","right","submitMap","stones","map","singleRow","index1","singleBlock","index2","post","name","parts","uploaded_by","then","alert","event","target","display","console","log"],"mappings":"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","sourcesContent":["import React, {useState,Component, useRef, useEffect } from 'react';\nimport createBoardCreator from '../components/createPage/createBoardCreator';\nimport CreatorTile from '../components/createPage/CreatorTile';\nimport CreatorCell from '../components/createPage/CreatorCell';\nimport BodyPartBox from '../components/createPage/BodyPartBox';\nimport CreatorBottomCells from '../components/createPage/CreatorBottomCells';\nimport  Axios  from 'axios';\nfunction Create() {\n  const [activeCard, setActiveCard] = useState(0);\n  const [board,setBoard] = useState([]);\n  const [grid,setGrid] = useState([]);\n  const [width,setWidth] = useState(3);\n  const [height,setHeight] = useState(3);\n  const [bodyPart,setBodyPart] = useState(0);\n\n  useEffect(()=>{\n  function freshBoard (row,col){\n    const newBoard = createBoardCreator(row, col);\n      setBoard(newBoard);\n    setGrid(newBoard.board);\n  }freshBoard(height,width)\n},[height]);\n\n  const tileClick = (x,y) =>{\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    let newBoard = JSON.parse(JSON.stringify(board));\n    newGrid[x][y].value = bodyPart;\n    newBoard.board = newGrid;\n    setGrid(newGrid);\n    setBoard(newBoard);\n  }\n  const tileRightClick = (x,y) =>{\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    let newBoard = JSON.parse(JSON.stringify(board));\n    newGrid[x][y].value = 2;\n    newBoard.board = newGrid;\n    setGrid(newGrid);\n    setBoard(newBoard);\n  }\n  const CellChange = (x,value) =>{\n    let newBoard = JSON.parse(JSON.stringify(board));\n    newBoard.right[x] = 1;\n    setBoard(newBoard);\n  }\n  const submitMap = () =>{\n    let stones = '2,2'\n    grid.map((singleRow,index1)=>{\n      singleRow.map((singleBlock,index2)=>{\n        if(singleBlock.value === 2 ){\n          stones = stones + index1 + ',' + index2\n        }\n      })\n    })\n    Axios.post(\"http://localhost:3001/api/insertMap\",{\n      name:'test',\n      width:width,\n      height:height,\n      parts:'1,1,2,2,3,3',\n      stones:stones,\n      uploaded_by:'bob',\n  }).then(()=>{\n    alert(\"success\");\n  });\n  };\n  if(activeCard === 0){\n  return (\n    <div className='create'>\n      <div className='form'>\n      <label>width :</label>\n       <input type=\"number\" name=\"width\" onChange={event => setWidth(event.target.value)} />\n       <label>height :</label>\n       <input type=\"number\" name=\"height\"onChange={event => setHeight(event.target.value)} />\n      \n        \n        <div>\n        <button onClick={() => { setActiveCard(1) } }>Done</button>\n        </div>\n      </div>\n       \n    </div>\n  )\n  }\n\n  return( \n    <div>\n      \n      {\n        grid.map((singleRow,index1)=>{\n          return <div style={{display: \"flex\"}} key={index1}>{\n           singleRow.map((singleBlock,index2)=>{\n         return <CreatorTile details={singleBlock} tileClick={tileClick} tileRightClick={tileRightClick} key={index2}/>\n      })\n      }\n       \n          </div> \n        })\n        \n      }\n      \n      \n      <div>\n        <button onClick={() =>setBodyPart(1)}>Head</button>\n        <button onClick={() =>setBodyPart(3)}>Body</button>\n        <button onClick={() =>setBodyPart(4)}>Tail</button>\n        <button onClick={() =>setBodyPart(0)}>Delete</button>\n      </div>\n      <button onClick={() =>{console.log(board)}}>save map</button>\n      <button onClick={submitMap}>save map and play</button>\n    </div>\n  )\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}