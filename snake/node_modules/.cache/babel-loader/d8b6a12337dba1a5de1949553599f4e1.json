{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bobafet\\\\Desktop\\\\snake\\\\snake\\\\src\\\\components\\\\homePage\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport createBoard from '../createBoard';\nimport Tile from './Tile';\nimport Cell from './Cell';\nimport BottomCells from './BottomCells';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  //létre hozzuk a boardot\n  const [grid, setGrid] = useState([]);\n  const [lastPos, setLastPos] = useState([0, 0]);\n  const [BottomSide, setBottomSide] = useState([0]);\n  const [rightSide, setRightSide] = useState([0]);\n  useEffect(() => {\n    function freshBoard() {\n      const newBoard = createBoard(5, 5, \"0,0,4,2,0,4\", \"1,0,1,2,1,4,3,0\", \"3,0,0,0,0\", \"1,1,1,0,0\");\n      setGrid(newBoard.board);\n      setBottomSide(newBoard.bottom);\n      setRightSide(newBoard.right);\n    }\n\n    freshBoard();\n  }, []);\n  useEffect(() => {\n    let rightCount = 0;\n    let bottomCount = 0;\n    grid.map((singleRow, index1) => {\n      let rowCount = 0;\n      singleRow.map((singleBlock, index2) => {\n        if (singleBlock.value === 1) {\n          rowCount++;\n        }\n      });\n\n      if (rowCount === rightSide[index1]) {\n        rightCount++;\n      }\n    });\n\n    for (let i = 0; i = BottomSide.length; i++) {\n      let colClont = 0;\n\n      for (let j = 0; j = rightSide.length; j++) {\n        if (3 === 1) {\n          colClont++;\n        }\n      }\n\n      if (colClont === BottomSide[i]) {\n        bottomCount++;\n      }\n    }\n\n    console.log(bottomCount);\n\n    if (rightCount === rightSide.length) {\n      alert('win');\n    }\n  }, [grid]); //mezőre kattintás\n\n  const tileClick = (x, y) => {\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    let elozo = lastPos;\n\n    if (newGrid[x][y].value === 0 && x === elozo[0]) {\n      if (y + 1 === elozo[1] || y - 1 === elozo[1]) {\n        newGrid[x][y].value = 1;\n        elozo[1] = y;\n        setGrid(newGrid);\n      }\n    }\n\n    if (newGrid[x][y].value === 0 && y === elozo[1]) {\n      if (x + 1 === elozo[0] || x - 1 === elozo[0]) {\n        newGrid[x][y].value = 1;\n        elozo[0] = x;\n        setGrid(newGrid);\n      }\n    }\n\n    setLastPos(elozo);\n  }; //renderelés\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [grid.map((singleRow, index1) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [singleRow.map((singleBlock, index2) => {\n          return /*#__PURE__*/_jsxDEV(Tile, {\n            details: singleBlock,\n            tileClick: tileClick\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 18\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Cell, {\n          value: rightSide[index1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 12\n        }, this)]\n      }, index1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(BottomCells, {\n      values: BottomSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Board, \"47hgER4NR0Sac1HZz7MlEiz5P/0=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Bobafet/Desktop/snake/snake/src/components/homePage/Board.js"],"names":["React","useEffect","useState","createBoard","Tile","Cell","BottomCells","Board","grid","setGrid","lastPos","setLastPos","BottomSide","setBottomSide","rightSide","setRightSide","freshBoard","newBoard","board","bottom","right","rightCount","bottomCount","map","singleRow","index1","rowCount","singleBlock","index2","value","i","length","colClont","j","console","log","alert","tileClick","x","y","newGrid","JSON","parse","stringify","elozo","display"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport createBoard from '../createBoard';\r\nimport Tile from './Tile'\r\nimport Cell from './Cell'\r\nimport BottomCells from './BottomCells';\r\n\r\nconst Board = () => {\r\n\r\n  //létre hozzuk a boardot\r\n  const [grid,setGrid] = useState([]);\r\n  const [lastPos,setLastPos] = useState([0,0]);\r\n  const [BottomSide,setBottomSide] = useState([0]);\r\n  const [rightSide,setRightSide] = useState([0]);\r\n  useEffect(() =>{\r\n    function freshBoard(){\r\n    const newBoard = createBoard(5, 5, \"0,0,4,2,0,4\", \"1,0,1,2,1,4,3,0\", \"3,0,0,0,0\", \"1,1,1,0,0\");\r\n    setGrid(newBoard.board);\r\n    setBottomSide(newBoard.bottom);\r\n    setRightSide(newBoard.right);\r\n  }freshBoard();\r\n  }, []);\r\n  useEffect(() =>{\r\n    let rightCount = 0;\r\n    let bottomCount = 0;\r\n\r\n    grid.map((singleRow,index1)=>{   \r\n      let rowCount = 0; \r\n        singleRow.map((singleBlock,index2)=>{\r\n         if(singleBlock.value === 1){\r\n          rowCount++;\r\n         } \r\n        })\r\n      if(rowCount === rightSide[index1]){\r\n        rightCount++;\r\n      }\r\n    })\r\n\r\n    for(let i = 0;i = BottomSide.length;i++){\r\n      let colClont = 0; \r\n      for(let j = 0;j = rightSide.length;j++){\r\n        if(3 === 1){  \r\n          colClont++;\r\n         } \r\n      }\r\n      if(colClont === BottomSide[i]){\r\n        bottomCount++;\r\n      }\r\n    }\r\n    console.log(bottomCount)\r\n    if( rightCount === rightSide.length){\r\n      alert('win')\r\n    }\r\n  }, [grid]);\r\n  \r\n  \r\n\r\n  //mezőre kattintás\r\n  const tileClick = (x,y) =>{\r\n    let newGrid = JSON.parse(JSON.stringify(grid));\r\n    let elozo = lastPos;\r\n\r\n    if(newGrid[x][y].value === 0 && x === elozo[0]){\r\n      if(y + 1 === elozo[1] || y - 1 === elozo[1]){\r\n        newGrid[x][y].value = 1;\r\n        elozo[1] = y;\r\n        setGrid(newGrid);\r\n        \r\n      }   \r\n    }\r\n    if(newGrid[x][y].value === 0 && y === elozo[1]){\r\n      if(x + 1 === elozo[0] || x - 1 === elozo[0]){\r\n        newGrid[x][y].value = 1;\r\n        elozo[0] = x;\r\n        setGrid(newGrid);\r\n    }   \r\n    }\r\n    setLastPos(elozo);\r\n    \r\n  }\r\n\r\n\r\n   //renderelés\r\n    return ( <div>\r\n    {\r\n      \r\n    grid.map((singleRow,index1)=>{\r\n      return <div style={{display: \"flex\"}} key={index1}>{\r\n        singleRow.map((singleBlock,index2)=>{\r\n          return <Tile details={singleBlock} tileClick={tileClick} key={index2}/>;\r\n        })\r\n      }\r\n           <Cell value={rightSide[index1]}/>    \r\n      </div>\r\n      \r\n      \r\n    })\r\n    \r\n    }\r\n    <BottomCells values={BottomSide}/>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}