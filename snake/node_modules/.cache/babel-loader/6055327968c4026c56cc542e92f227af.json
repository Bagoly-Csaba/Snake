{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bobafet\\\\Desktop\\\\snake\\\\snake\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport createBoard from './createBoard';\nimport Tile from './Tile';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  //létre hozzuk a boardot\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    function freshBoard() {\n      const newBoard = createBoard(5, 5, \"0,0,0,2,0,4\", \"1,0,1,2,1,4\", \"1,2,3,4,5\", \"1,2,3,4,5\");\n      setGrid(newBoard);\n    }\n\n    freshBoard();\n  }, []);\n\n  if (!grid.board) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [grid.board.map(singleRow => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [singleRow.map(singleBlock => {\n          return /*#__PURE__*/_jsxDEV(Tile, {\n            details: singleBlock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 18\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Cell, {\n          value: grid.right[singleRow]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(BottomBoard, {\n      values: newBoard.Bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Board, \"owlWVbES+DCGU/3HWNCJxd3FI3E=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Bobafet/Desktop/snake/snake/src/components/Board.js"],"names":["React","useEffect","useState","createBoard","Tile","Cell","Board","grid","setGrid","freshBoard","newBoard","board","map","singleRow","display","singleBlock","right","Bottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AAGA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb,aAASQ,UAAT,GAAqB;AACrB,YAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,aAAP,EAAsB,aAAtB,EAAqC,WAArC,EAAkD,WAAlD,CAA5B;AACAK,MAAAA,OAAO,CAACE,QAAD,CAAP;AACC;;AAAAD,IAAAA,UAAU;AACZ,GALQ,EAKN,EALM,CAAT;;AAOE,MAAG,CAACF,IAAI,CAACI,KAAT,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAS;AAAA,eACRJ,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAgBC,SAAD,IAAa;AAC3B,0BAAO;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA,mBACLD,SAAS,CAACD,GAAV,CAAeG,WAAD,IAAe;AAC3B,8BAAO,QAAC,IAAD;AAAM,YAAA,OAAO,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD,CADK,eAMF,QAAC,IAAD;AAAM,UAAA,KAAK,EAAER,IAAI,CAACS,KAAL,CAAWH,SAAX;AAAb;AAAA;AAAA;AAAA;AAAA,gBANE;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAUD,KAXA,CADQ,eAiBV,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEH,QAAQ,CAACO;AAA9B;AAAA;AAAA;AAAA;AAAA,YAjBU;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAoBH,CArCD;;GAAMX,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport createBoard from './createBoard';\r\nimport Tile from './Tile'\r\nimport Cell from './Cell'\r\nconst Board = () => {\r\n  //létre hozzuk a boardot\r\n  \r\n\r\n  const [grid,setGrid] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    function freshBoard(){\r\n    const newBoard = createBoard(5, 5, \"0,0,0,2,0,4\", \"1,0,1,2,1,4\", \"1,2,3,4,5\", \"1,2,3,4,5\");\r\n    setGrid(newBoard);\r\n    }freshBoard();\r\n  }, []);\r\n  \r\n    if(!grid.board){\r\n      return <div>loading</div>\r\n    }\r\n   \r\n    return ( <div>\r\n    {grid.board.map((singleRow)=>{\r\n      return <div style={{display: \"flex\"}}>{\r\n        singleRow.map((singleBlock)=>{\r\n          return <Tile details={singleBlock}/>;\r\n        }\r\n        )\r\n      }\r\n           <Cell value={grid.right[singleRow]}/>    \r\n      </div>\r\n      \r\n      \r\n    })\r\n    \r\n    }\r\n   \r\n        \r\n   <BottomBoard values={newBoard.Bottom}/> \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}