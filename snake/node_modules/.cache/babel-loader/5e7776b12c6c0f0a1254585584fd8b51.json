{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bobafet\\\\Desktop\\\\snake\\\\snake\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport createBoard from './createBoard';\nimport Tile from './Tile';\nimport Cell from './Cell';\nimport BottomCells from './BottomCells';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  //létre hozzuk a boardot\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    function freshBoard() {\n      const newBoard = createBoard(5, 5, \"0,0,0,2,0,4\", \"1,0,1,2,1,4\", \"1,2,3,4,5\", \"1,2,3,4,5\");\n      setGrid(newBoard.board);\n    }\n\n    freshBoard();\n  }, []);\n\n  const tileClick = (x, y) => {\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    console.log(newGrid[x][y]);\n    newGrid[x][y].value = 1;\n    setGrid(newGrid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [grid.map((singleRow, index1) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [singleRow.map((singleBlock, index2) => {\n          return /*#__PURE__*/_jsxDEV(Tile, {\n            details: singleBlock,\n            tileClick: tileClick\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Cell, {\n          value: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }, this)]\n      }, index1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(BottomCells, {\n      values: \"1,2,3,4,5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Board, \"owlWVbES+DCGU/3HWNCJxd3FI3E=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Bobafet/Desktop/snake/snake/src/components/Board.js"],"names":["React","useEffect","useState","createBoard","Tile","Cell","BottomCells","Board","grid","setGrid","freshBoard","newBoard","board","tileClick","x","y","newGrid","JSON","parse","stringify","console","log","value","map","singleRow","index1","display","singleBlock","index2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AAGA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb,aAASS,UAAT,GAAqB;AACrB,YAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,aAAP,EAAsB,aAAtB,EAAqC,WAArC,EAAkD,WAAlD,CAA5B;AACAM,MAAAA,OAAO,CAACE,QAAQ,CAACC,KAAV,CAAP;AACC;;AAAAF,IAAAA,UAAU;AACZ,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMG,SAAS,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACxB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,IAAf,CAAX,CAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACF,CAAD,CAAP,CAAWC,CAAX,CAAZ;AACAC,IAAAA,OAAO,CAACF,CAAD,CAAP,CAAWC,CAAX,EAAcO,KAAd,GAAsB,CAAtB;AACAb,IAAAA,OAAO,CAACO,OAAD,CAAP;AACD,GALD;;AASE,sBAAS;AAAA,eACRR,IAAI,CAACe,GAAL,CAAS,CAACC,SAAD,EAAWC,MAAX,KAAoB;AAC5B,0BAAO;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA,mBACLF,SAAS,CAACD,GAAV,CAAc,CAACI,WAAD,EAAaC,MAAb,KAAsB;AAClC,8BAAO,QAAC,IAAD;AAAM,YAAA,OAAO,EAAED,WAAf;AAA4B,YAAA,SAAS,EAAEd;AAAvC,aAAuDe,MAAvD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD,CADK,eAMF,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,gBANE;AAAA,SAAoCH,MAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AAUD,KAXA,CADQ,eAeT,QAAC,WAAD;AAAa,MAAA,MAAM,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,YAfS;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAkBH,CAxCD;;GAAMlB,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport createBoard from './createBoard';\r\nimport Tile from './Tile'\r\nimport Cell from './Cell'\r\nimport BottomCells from './BottomCells';\r\nconst Board = () => {\r\n  //létre hozzuk a boardot\r\n  \r\n\r\n  const [grid,setGrid] = useState([]);\r\n\r\n  useEffect(() =>{\r\n    function freshBoard(){\r\n    const newBoard = createBoard(5, 5, \"0,0,0,2,0,4\", \"1,0,1,2,1,4\", \"1,2,3,4,5\", \"1,2,3,4,5\");\r\n    setGrid(newBoard.board);\r\n    }freshBoard();\r\n  }, []);\r\n  \r\n  const tileClick = (x,y) =>{\r\n    let newGrid = JSON.parse(JSON.stringify(grid));\r\n    console.log(newGrid[x][y]);\r\n    newGrid[x][y].value = 1;\r\n    setGrid(newGrid);\r\n  }\r\n\r\n\r\n   \r\n    return ( <div>\r\n    {grid.map((singleRow,index1)=>{\r\n      return <div style={{display: \"flex\"}} key={index1}>{\r\n        singleRow.map((singleBlock,index2)=>{\r\n          return <Tile details={singleBlock} tileClick={tileClick} key={index2}/>;\r\n        }\r\n        )\r\n      }\r\n           <Cell value={1}/>    \r\n      </div>\r\n      \r\n      \r\n    })\r\n    \r\n    }\r\n    <BottomCells values={\"1,2,3,4,5\"}/>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}