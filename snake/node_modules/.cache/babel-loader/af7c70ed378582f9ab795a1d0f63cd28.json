{"ast":null,"code":"export default (board => {\n  var palya = JSON.parse(JSON.stringify(board));\n  palya.pozicio = aiLastPos;\n  palya.atHaladt = false;\n  var adjList = [];\n\n  function bejaro(start) {\n    var adjList = [];\n    adjList.push(start);\n    adjList.push(getPossbleMoves(start));\n    console.log(adjList);\n  }\n\n  bejaro(palya);\n\n  function getPossbleMoves(allas) {\n    let moves = [];\n\n    if (allas.pozicio[0] !== 0) {\n      if (allas.board[allas.pozicio[0] - 1][allas.pozicio[1]].value !== 2) {\n        let up = JSON.parse(JSON.stringify(allas));\n        up.board[allas.pozicio[0] - 1][allas.pozicio[1]].value = 1;\n        up.pozicio[0] = allas.pozicio[0] - 1;\n        moves.push(up);\n      }\n    }\n\n    if (allas.pozicio[1] !== 0) {\n      if (allas.board[allas.pozicio[0]][allas.pozicio[1] - 1].value !== 2) {\n        let left = JSON.parse(JSON.stringify(allas));\n        left.board[allas.pozicio[0]][allas.pozicio[1] - 1].value = 1;\n        left.pozicio[1] = left.pozicio[1] - 1;\n\n        function addToList() {\n          moves.push(left);\n        }\n\n        addToList();\n      }\n    }\n\n    if (allas.pozicio[0] !== allas.right.length - 1) {\n      if (allas.board[allas.pozicio[0] + 1][allas.pozicio[1]].value !== 2) {\n        let down = JSON.parse(JSON.stringify(allas));\n        down.board[allas.pozicio[0] + 1][allas.pozicio[1]].value = 1;\n        down.pozicio[0] = allas.pozicio[0] + 1;\n        moves.push(down);\n      }\n    }\n\n    if (allas.pozicio[1] !== allas.bottom.length - 1) {\n      if (allas.board[allas.pozicio[0]][allas.pozicio[1] + 1].value !== 2) {\n        let right = JSON.parse(JSON.stringify(allas));\n        right.board[allas.pozicio[0]][allas.pozicio[1] + 1].value = 1;\n        right.pozicio[1] = allas.pozicio[1] + 1;\n        moves.push(right);\n      }\n    }\n\n    return moves;\n  }\n\n  function isSolution() {\n    let rightCount = 0;\n    let bottomCount = 0;\n    let bodypartCount = 0; //oldalsó check\n\n    palya.board.map((singleRow, index1) => {\n      let rowCount = 0;\n      singleRow.map((singleBlock, index2) => {\n        if (singleBlock.value === 1) {\n          rowCount++;\n        }\n      });\n\n      if (rowCount === rightSide[index1]) {\n        rightCount++;\n      }\n    }); //alsó check\n\n    for (let i = 0; i < palya.bottom.length; i++) {\n      let colCount = 0;\n\n      for (let j = 0; j < palya.right.length; j++) {\n        if (palya.board[j][i].value === 1) {\n          colCount++;\n        }\n      }\n\n      if (colCount === BottomSide[i]) {\n        bottomCount++;\n      }\n    } //testresz check\n\n\n    palya.board.map((singleRow, index1) => {\n      singleRow.map((singleBlock, index2) => {\n        if (singleBlock.value === 3) {\n          bodypartCount++;\n        }\n\n        if (singleBlock.value === 4) {\n          bodypartCount++;\n        }\n      });\n    });\n\n    if (rightCount === palya.right.length && bottomCount === palya.bottom.length && bodypartCount === 0) {\n      return true;\n    }\n  } //\n\n\n  console.log(board);\n  return {};\n});","map":{"version":3,"sources":["C:/Users/Bobafet/Desktop/snake/snake/src/components/Mestint.js"],"names":["board","palya","JSON","parse","stringify","pozicio","aiLastPos","atHaladt","adjList","bejaro","start","push","getPossbleMoves","console","log","allas","moves","value","up","left","addToList","right","length","down","bottom","isSolution","rightCount","bottomCount","bodypartCount","map","singleRow","index1","rowCount","singleBlock","index2","rightSide","i","colCount","j","BottomSide"],"mappings":"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","sourcesContent":["export default (board) => {    \r\n        var palya = JSON.parse(JSON.stringify(board));\r\n        palya.pozicio = aiLastPos\r\n        palya.atHaladt = false\r\n        var adjList = []\r\n        \r\n        \r\n        function bejaro(start){\r\n            var adjList = []\r\n            adjList.push(start)\r\n            adjList.push(getPossbleMoves(start))\r\n          \r\n          \r\n          \r\n            console.log(adjList)\r\n        }bejaro(palya);\r\n       \r\n    \r\n        function getPossbleMoves(allas){\r\n          let moves = []\r\n          if(allas.pozicio[0] !== 0){\r\n            if(allas.board[allas.pozicio[0] - 1][allas.pozicio[1]].value !== 2 ){\r\n              let  up = JSON.parse(JSON.stringify(allas));\r\n            up.board[allas.pozicio[0] - 1][allas.pozicio[1]].value = 1;\r\n            up.pozicio[0] = allas.pozicio[0] - 1;\r\n            moves.push(up);\r\n            }\r\n          }\r\n          if(allas.pozicio[1] !== 0){\r\n            if(allas.board[allas.pozicio[0]][allas.pozicio[1] - 1].value !== 2){\r\n              let  left = JSON.parse(JSON.stringify(allas));\r\n              left.board[allas.pozicio[0]][allas.pozicio[1] - 1].value = 1;\r\n              left.pozicio[1] = left.pozicio[1] - 1;\r\n              function addToList(){\r\n                moves.push(left);\r\n              }addToList()\r\n              \r\n            }\r\n          }\r\n          if(allas.pozicio[0] !== allas.right.length - 1){\r\n              if(allas.board[allas.pozicio[0] + 1][allas.pozicio[1]].value !== 2 ){\r\n                let  down = JSON.parse(JSON.stringify(allas));\r\n                down.board[allas.pozicio[0] + 1][allas.pozicio[1]].value = 1;\r\n                down.pozicio[0] = allas.pozicio[0] + 1;\r\n                moves.push(down);\r\n              }   \r\n            }\r\n          if(allas.pozicio[1] !== allas.bottom.length - 1){\r\n              if(allas.board[allas.pozicio[0]][allas.pozicio[1] + 1].value !== 2){\r\n                  let  right = JSON.parse(JSON.stringify(allas));\r\n                  right.board[allas.pozicio[0]][allas.pozicio[1] + 1].value = 1;\r\n                  right.pozicio[1] = allas.pozicio[1] + 1;\r\n                  moves.push(right);\r\n              }\r\n          }\r\n          return moves;  \r\n        }\r\n    \r\n        function isSolution(){\r\n          let rightCount = 0;\r\n          let bottomCount = 0;\r\n          let bodypartCount = 0;\r\n          //oldalsó check\r\n          palya.board.map((singleRow,index1)=>{   \r\n            let rowCount = 0; \r\n              singleRow.map((singleBlock,index2)=>{\r\n              if(singleBlock.value === 1){\r\n                rowCount++;\r\n              } \r\n              })\r\n            if(rowCount === rightSide[index1]){\r\n              rightCount++;\r\n            }\r\n          })\r\n          //alsó check\r\n            for(let i = 0; i < palya.bottom.length;i++){\r\n              let colCount = 0; \r\n              for(let j = 0; j < palya.right.length;j++){\r\n                if(palya.board[j][i].value === 1){\r\n                  colCount++;\r\n                } \r\n              }\r\n              if(colCount === BottomSide[i]){\r\n                bottomCount++;\r\n              }\r\n            }\r\n          \r\n          //testresz check\r\n          palya.board.map((singleRow,index1)=>{   \r\n              singleRow.map((singleBlock,index2)=>{\r\n              if(singleBlock.value === 3){\r\n                bodypartCount++\r\n              } \r\n              if(singleBlock.value === 4){\r\n                bodypartCount++\r\n              } \r\n              })\r\n            \r\n          })\r\n          if( rightCount === palya.right.length && bottomCount === palya.bottom.length && bodypartCount === 0){\r\n            return true\r\n          }\r\n        }//\r\n    \r\n    \r\n       \r\n      \r\n\r\n    console.log(board)\r\n    return {  };\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}